datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  image         String?
  settings      Json?     @default("{}")
  analyses      Analysis[]
  chats         Chat[]
  messages      Message[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Analysis {
  id          String    @id @default(cuid())
  title       String
  data        Json
  summary     Json
  charts      Json
  fileType    String    @default("csv")  // 'csv', 'json', 'excel', 'pdf', 'image'
  encrypted   Boolean   @default(false)
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  files       File[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deleteAt    DateTime?
}

model Chat {
  id          String    @id @default(cuid())
  title       String
  active      Boolean   @default(true)
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages    Message[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Message {
  id          String    @id @default(cuid())
  content     String    @db.Text
  type        String    @default("text")  // 'text', 'code', or 'image'
  role        String    // 'user' or 'assistant'
  files       String[]  @default([])
  metadata    Json?     @default("{}")  // For storing things like code language, file types, etc.
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  chatId      String
  chat        Chat      @relation(fields: [chatId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())

  @@index([chatId])
  @@index([userId])
}

model File {
  id          String    @id @default(cuid())
  name        String
  type        String    // 'csv', 'json', 'excel', 'pdf', 'image'
  size        Int
  path        String
  encrypted   Boolean   @default(false)
  analysisId  String
  analysis    Analysis  @relation(fields: [analysisId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deleteAt    DateTime?
}